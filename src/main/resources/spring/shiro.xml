<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	<!-- 这里主要是设置自定义的单Realm应用,若有多个Realm,可使用'realms'属性代替 -->
	<bean id="subjectFactory" class="org.fiberhome.metrorec.web.shiro.StatelessSubjectFactory" />
	<!-- Realm实现 -->
	<bean id="statelessRealm" class="org.fiberhome.metrorec.web.shiro.StatelessRealm">
		<property name="cachingEnabled" value="false" />
	</bean>
	<bean id="sessionManager" class="org.apache.shiro.session.mgt.DefaultSessionManager">
		<property name="sessionValidationSchedulerEnabled" value="false" />
	</bean>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="statelessRealm" />
		<!-- <property name="subjectDAO.sessionStorageEvaluator.sessionStorageEnabled"
			value="false" /> -->
		<property name="subjectFactory" ref="subjectFactory" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>
	<bean id="statelessAuthcFilter" class="org.fiberhome.metrorec.web.shiro.StatelessAuthcFilter"></bean>

	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
	<!-- Web应用中,Shiro可控制的Web请求必须经过Shiro主过滤器的拦截,Shiro对基于Spring的Web应用提供了完美的支持 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口,这个属性是必须的 -->
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/app/stewardTask/login" />
		<property name="filters">
			<map>
				<entry key="sauthc" value-ref="statelessAuthcFilter" />
			</map>
		</property>
		<!-- Shiro连接约束配置,即过滤链的定义/community/activitys/attend=sauthc
				/community/activitys/cancleAttend=sauthc -->
		<!-- anon：它对应的过滤器里面是空的,什么都没做 -->
		<!-- authc：该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器org.apache.shiro.web.filter.authc.FormAuthenticationFilter -->
		<property name="filterChainDefinitions">
			<value>
				/person/**=sauthc
				/homeCenter/bespeak=sauthc
				/homeCenter/listOrder=sauthc				
				/homeCenter/detailOrder=sauthc
				/homeCenter/createOrder=sauthc
				/homeCenter/cancleOrder=sauthc
				/users/modifyPwdByOld=sauthc
				/users/modifyUser=sauthc
				/users/modifyUserAvatar=sauthc
				/users/modifyPhone=sauthc
				/media/laud=sauthc
				/dishs/createOrder=sauthc
				/dishs/listOrder=sauthc
				/dishs/detailOrder=sauthc
				/dishs/cancleOrder=sauthc
				/goods/orderList=sauthc
				/goods/orderCancel=sauthc
				/goods/orderDetail=sauthc
				/goods/orderCreate=sauthc
				/*/comment=sauthc
				<!-- /goods/order*=sauthc -->
			   	/**=anon
			</value>
		</property>
	</bean>
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>